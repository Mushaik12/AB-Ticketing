<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="metroTextBox1.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AMMCRoVnlYT4wAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADASURBVDhP
        xZE5DsIwFETT0XEL4GDUiZcSTgMVkBNxAJYKikhpYcYaNssGSwgx0pMs/5lvf7tKyRgzsda2YC9a7/1Y
        5fdi2Dl3QujyDPeKmvC0OHwDTTay5YUbHFJhcZQtL5g4cypMdrLlxWsmgoGiEfhQXz0iRSNC92/kyU3T
        jFT+oeq6HuIXpjh1DbbgLLhesUaP7A9hcwDDHHTgZfYEHUaaMaN4+LplZCphoXho0EfFEnrFQ4OU4SOK
        /7VBVV0B2KRREAHc5vwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="metroTextBox2.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AMMCRkZvM0MCwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAD7SURBVDhP
        jZI9CsJQEISD1tprJ1beQg+R3kK7hPwUKSWN3kFrBbW100P4cxUFESI6q0MeviwxA0NeZr7dEBJHUxzH
        gzAMD/ANvsJ7uM+6XEEQjAE/4ZdlyUbEdPm+3wX0kAEsmuLa8jyvjetMMulw3yFeFICU4JpRLmQb6bB4
        wqgolCsuGDLKJRm7JaOioijaCoRFLqNckkknDKNfAbjzCX8tLMeMNLDMHDPSIPgIn6zsY44ZKdApTdOa
        GOez1VVacHZdty7G+WJ1lV+hRxc6jhlpEP7MZpIkDa3jmJEG4ZvvxFrHMSOEmQ2VOOOYEZ60kMICNQsz
        /045zhsB6F4iPIH3UQAAAABJRU5ErkJggg==
</value>
  </data>
</root>